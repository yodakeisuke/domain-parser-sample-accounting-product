---
description: Template for creating domain term documentation in natural language
globs: *.md
---
# Domain Term Natural Language Template

## Template Structure

```markdown
# 用語名（EnglishName）

## 概要
[この用語が表す概念の簡潔な説明、業務上の用途]

## 関連する用語
- 関連用語1（RelatedTerm1）
- 関連用語2（RelatedTerm2）

## 情報構造
### [用語]の分類/状態
- **分類1/状態1（Classification1/State1）**
    - プロパティ1
    - プロパティ2
- **分類2/状態2（Classification2/State2）**
    - プロパティ3
    - プロパティ4（nullable）

### 導出プロパティ
- `propertyName()`: プロパティの説明
- `anotherProperty()`: 別のプロパティの説明

## 状態遷移
```mermaid
stateDiagram-v2
    [*] --> State1 : action1
    State1 --> State2 : action2
    State2 --> [*]
```

## 生成と変換
### 変換元からの生成（from）
- 入力情報の説明

## ビジネスルール
### ルール1の名前
- 条件や制約1
- 条件や制約2

### ルール2の名前  
- 条件や制約3
- 条件や制約4
```

## ガイドライン

### 1. 概要セクション
- 業務担当者が理解できる言葉で記述
- 技術的な詳細は含めない
- 用途や目的を明確に

### 2. 情報構造
- 「分類」か「状態」かを明確に
  - **分類**: 変化しない種類（商品タイプなど）
  - **状態**: ライフサイクルで変化する条件（承認状態など）
  - **両方**: 両方の性質を持つ場合もある
- 階層構造は業務上の関係性を反映
- nullableは業務上「必須でない」ことを意味

### 3. 導出プロパティ
- 他の情報から導き出せる情報
- 関数名は英語、説明は日本語で

### 4. 状態遷移
- 業務フローを表現
- アクション名は業務上の操作名

### 5. ビジネスルール
- 業務上の制約や条件
- 「〜の場合は〜する」形式で記述
- 技術的な実装方法は記載しない

## 記述時の注意点

1. **対象読者**: 業務担当者、ドメインエキスパート
2. **使用言語**: 日本語中心、用語の英語名を併記
3. **禁止事項**: 
   - プログラミング言語の記述
   - 技術的な実装詳細
   - エラーハンドリングの詳細
4. **推奨事項**:
   - 具体例を含める
   - 業務上の文脈を説明
   - 図表を活用